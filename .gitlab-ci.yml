image: cznic/ubuntu:16.04

variables:
  DEBIAN_FRONTEND: noninteractive
  LC_ALL: C.UTF-8
  
build:linux:amd64:
  stage: build
  script:
    - PREFIX=$(pwd)/.local make -k all
    - PREFIX=$(pwd)/.local make install
  artifacts:
    untracked: true
  tags:
    - docker
    - linux
    - amd64

test:linux:amd64:
  stage: test
  script:
    - PREFIX=$(pwd)/.local make -k check
  dependencies:
    - build:linux:amd64
  tags:
    - docker
    - linux
    - amd64

deckard:linux:amd64:
  stage: test
  script:
    - git submodule update --init --recursive
    - PREFIX=$(pwd)/.local MAKEFLAGS="--jobs $(nproc) --keep-going" make check-integration
  dependencies:
    - build:linux:amd64
  tags:
    - docker
    - linux
    - amd64

respdiff:linux:amd64:
  stage: test
  before_script:
    - pwd
    - cp $(pwd)/respdiff/policy-rc.d /usr/sbin/policy-rc.d
    - apt-get -qq update
    - apt-get -yqq install unbound
    - apt-get -yqq install bind9
    - git clone --depth=1 -b master https://gitlab.labs.nic.cz/knot/resolver-benchmarking.git $(pwd)/resolver-benchmarking
    - cp $(pwd)/respdiff/test.cfg $(pwd)/resolver-benchmarking/response_differences/config/
  script:
    - /usr/sbin/unbound -c $(pwd)/respdiff/unbound.conf
    - pidof unbound
    - /usr/sbin/named -n 1 -c $(pwd)/respdiff/named.conf
    - pidof named
    - LD_LIBRARY_PATH=$(pwd)/.local/lib nohup $(pwd)/.local/sbin/kresd -k /usr/share/root.key -f 1 -v --config $(pwd)/respdiff/kresd.conf $(pwd)/ &
    - pidof kresd
    - python2.7 $(pwd)/resolver-benchmarking/response_differences/respdif -c $(pwd)/respdiff/test.cfg -i $(pwd)/respdiff/datafile-100k --json -o -b ${CI_COMMIT_REF_NAME}
    - $(pwd)/resolver-benchmarking/response_differences/nightly.sh
    - cp -r $(pwd)/resolver-benchmarking/response_differences/results $(pwd)
  dependencies:
    - build:linux:amd64
  artifacts:
    when: always
    expire_in: '1 week'
    paths:
      - results/*.json
      - results/*.out
      - results/*.log
  tags:
    - docker
    - linux
    - amd64
  allow_failure: true

#arm_build:
#  image: cznic/armhf-ubuntu:16.04
#  stage: build
#  script:
#    - make -k all
#  tags:
#    - docker
#    - linux
#    - arm

#arm_test:
#  image: armv7/armhf-ubuntu:16.04
#  stage: test
#  script:
#    - make -k check
#  tags:
#    - docker
#    - linux
#    - arm
